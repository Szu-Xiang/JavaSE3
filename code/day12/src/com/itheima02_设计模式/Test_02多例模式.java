package com.itheima02_设计模式;
/*
多例模式概述
    1.介绍
        多例模式(Multiton Pattern)，属于创建型模式，提供了一种控制创建的对象个数的方式。
        作用：在程序运行期间,保证某个类有且仅能创建固定数量个对象,从而节省内存空间。
    2.特点
        ①构造方法要私有化,确保在类的外部不能通过new来创建对象
        ②在本类中创建固定个数的对象
        ③提供公共的访问方式   公共静态方法
    3.实现方式分类
        通用对象模式：无特殊含义区分的若干对象定义
        特定对象模式  有特殊含义区分的若干对象定义。
通用对象模式实现步骤
    ①创建一个类,  将构造方法私有化，使其不能在类的外部通过new关键字实例化该类对象。
    ②内部成员位置定义该类被创建的总数量,使用private static final修饰
    ③内部成员位置定义一个“集合”,使用 private static修饰
    ④在静态代码块中创建指定个数的本类对象,并添加到集合中
    ⑤提供一个公有、静态方法，随机获取集合中的一个对象。
    需求:定义一个通用对象的多例模式的类，演示通用对象的多例模式的使用。。
特定对象模式实现步骤
    ①创建一个类,  将构造方法私有化，使其不能在类的外部通过new关键字实例化该类对象。
    ②内部成员位置定义“几个本类对象” ,使用 public static final修饰。
    需求:定义一个性别类(使用特定对象的多例模式定义)，该类中只有boy,girl 两种性别，演示特定对象的多例模式的使用。。
 */
 public  class Test_02多例模式 {
    public static void main(String[] args) {

    }
}
